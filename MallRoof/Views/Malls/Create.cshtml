@model MallRoof.Models.Mall

@{
    ViewBag.Title = "Новый центр";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Новый торговый центр</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.City.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*//@Html.DropDownListFor(model => model.CityId, ViewBag.Cities, "Выберите город")*@
            @Html.DropDownListFor(x => Model.CityId, new SelectList(ViewBag.Cities, "CityId", "Name"), "Выберите город", htmlAttributes: new { @class = "form-control", id = "City" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfFloors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumberOfFloors, new { htmlAttributes = new { @class = "form-control allownumericwithoutdecimal" } })
            @Html.ValidationMessageFor(model => model.NumberOfFloors, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            Для каждого центра можно использовать новый номер
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control allownumericwithoutdecimal" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Smprice, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">            
            @Html.EditorFor(model => model.Smprice, new { htmlAttributes = new { @class = "form-control allownumericwithoutdecimal" } })
            @Html.ValidationMessageFor(model => model.Smprice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParkingExists, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.ParkingExists)
            @Html.ValidationMessageFor(model => model.ParkingExists, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParkingPayment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.ParkingPayment)
            @Html.ValidationMessageFor(model => model.ParkingPayment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParkingInsideExists, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.ParkingInsideExists)
            @Html.ValidationMessageFor(model => model.ParkingInsideExists, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParkingInsidePayment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.ParkingInsideExists)
            @Html.ValidationMessageFor(model => model.ParkingInsideExists, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Список центров", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
